{"ast":null,"code":"import _regeneratorRuntime from\"/Users/chandler/repos/react-weather-app/node_modules/@babel/runtime/helpers/esm/regeneratorRuntime.js\";import _asyncToGenerator from\"/Users/chandler/repos/react-weather-app/node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js\";import _slicedToArray from\"/Users/chandler/repos/react-weather-app/node_modules/@babel/runtime/helpers/esm/slicedToArray.js\";import{useState}from\"react\";import{AsyncPaginate}from\"react-select-async-paginate\";import{GEO_API_URL,geoApiOptions}from\"../../api\";import{jsx as _jsx}from\"react/jsx-runtime\";var Search=function Search(_ref){var onSearchChange=_ref.onSearchChange;var _useState=useState(null),_useState2=_slicedToArray(_useState,2),search=_useState2[0],setSearch=_useState2[1];var loadOptions=/*#__PURE__*/function(){var _ref2=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime().mark(function _callee(inputValue){var response,result;return _regeneratorRuntime().wrap(function _callee$(_context){while(1)switch(_context.prev=_context.next){case 0:_context.prev=0;_context.next=3;return fetch(\"\".concat(GEO_API_URL,\"/cities?minPopulation=1000000&namePrefix=\").concat(inputValue),geoApiOptions);case 3:response=_context.sent;_context.next=6;return response.json();case 6:result=_context.sent;return _context.abrupt(\"return\",{options:result.data.map(function(city){return{value:\"\".concat(city.latitude,\" \").concat(city.longitude),label:\"\".concat(city.name,\", \").concat(city.countryCode)};})});case 10:_context.prev=10;_context.t0=_context[\"catch\"](0);console.error(_context.t0);return _context.abrupt(\"return\",{options:[]});case 14:case\"end\":return _context.stop();}},_callee,null,[[0,10]]);}));return function loadOptions(_x){return _ref2.apply(this,arguments);};}();var handleOnChange=function handleOnChange(searchData){setSearch(searchData);onSearchChange(searchData);};return/*#__PURE__*/_jsx(AsyncPaginate,{placeholder:\"Search for city\",debounceTimeout:600,value:search,onChange:handleOnChange,loadOptions:loadOptions});};export default Search;","map":{"version":3,"names":["useState","AsyncPaginate","GEO_API_URL","geoApiOptions","jsx","_jsx","Search","_ref","onSearchChange","_useState","_useState2","_slicedToArray","search","setSearch","loadOptions","_ref2","_asyncToGenerator","_regeneratorRuntime","mark","_callee","inputValue","response","result","wrap","_callee$","_context","prev","next","fetch","concat","sent","json","abrupt","options","data","map","city","value","latitude","longitude","label","name","countryCode","t0","console","error","stop","_x","apply","arguments","handleOnChange","searchData","placeholder","debounceTimeout","onChange"],"sources":["/Users/chandler/repos/react-weather-app/src/components/search/search.js"],"sourcesContent":["import { useState } from \"react\";\nimport { AsyncPaginate } from \"react-select-async-paginate\";\nimport { GEO_API_URL, geoApiOptions } from \"../../api\";\n\nconst Search = ({ onSearchChange }) => {\n  const [search, setSearch] = useState(null);\n\n  const loadOptions = async (inputValue) => {\n    try {\n      const response = await fetch(\n        `${GEO_API_URL}/cities?minPopulation=1000000&namePrefix=${inputValue}`,\n        geoApiOptions\n      );\n      const result = await response.json();\n      return {\n        options: result.data.map((city) => {\n          return {\n            value: `${city.latitude} ${city.longitude}`,\n            label: `${city.name}, ${city.countryCode}`,\n          };\n        }),\n      };\n    } catch (error) {\n      console.error(error);\n      return { options: [] }; // Ensure an empty array of options is returned in case of an error\n    }\n  };\n\n  const handleOnChange = (searchData) => {\n    setSearch(searchData);\n    onSearchChange(searchData);\n  };\n\n  return (\n    <AsyncPaginate\n      placeholder=\"Search for city\"\n      debounceTimeout={600}\n      value={search}\n      onChange={handleOnChange}\n      loadOptions={loadOptions}\n    />\n  );\n};\n\nexport default Search;\n"],"mappings":"uYAAA,OAASA,QAAQ,KAAQ,OAAO,CAChC,OAASC,aAAa,KAAQ,6BAA6B,CAC3D,OAASC,WAAW,CAAEC,aAAa,KAAQ,WAAW,CAAC,OAAAC,GAAA,IAAAC,IAAA,yBAEvD,GAAM,CAAAC,MAAM,CAAG,QAAT,CAAAA,MAAMA,CAAAC,IAAA,CAA2B,IAArB,CAAAC,cAAc,CAAAD,IAAA,CAAdC,cAAc,CAC9B,IAAAC,SAAA,CAA4BT,QAAQ,CAAC,IAAI,CAAC,CAAAU,UAAA,CAAAC,cAAA,CAAAF,SAAA,IAAnCG,MAAM,CAAAF,UAAA,IAAEG,SAAS,CAAAH,UAAA,IAExB,GAAM,CAAAI,WAAW,6BAAAC,KAAA,CAAAC,iBAAA,cAAAC,mBAAA,GAAAC,IAAA,CAAG,SAAAC,QAAOC,UAAU,MAAAC,QAAA,CAAAC,MAAA,QAAAL,mBAAA,GAAAM,IAAA,UAAAC,SAAAC,QAAA,iBAAAA,QAAA,CAAAC,IAAA,CAAAD,QAAA,CAAAE,IAAA,SAAAF,QAAA,CAAAC,IAAA,GAAAD,QAAA,CAAAE,IAAA,SAEV,CAAAC,KAAK,IAAAC,MAAA,CACvB3B,WAAW,8CAAA2B,MAAA,CAA4CT,UAAU,EACpEjB,aACF,CAAC,QAHKkB,QAAQ,CAAAI,QAAA,CAAAK,IAAA,CAAAL,QAAA,CAAAE,IAAA,SAIO,CAAAN,QAAQ,CAACU,IAAI,CAAC,CAAC,QAA9BT,MAAM,CAAAG,QAAA,CAAAK,IAAA,QAAAL,QAAA,CAAAO,MAAA,UACL,CACLC,OAAO,CAAEX,MAAM,CAACY,IAAI,CAACC,GAAG,CAAC,SAACC,IAAI,CAAK,CACjC,MAAO,CACLC,KAAK,IAAAR,MAAA,CAAKO,IAAI,CAACE,QAAQ,MAAAT,MAAA,CAAIO,IAAI,CAACG,SAAS,CAAE,CAC3CC,KAAK,IAAAX,MAAA,CAAKO,IAAI,CAACK,IAAI,OAAAZ,MAAA,CAAKO,IAAI,CAACM,WAAW,CAC1C,CAAC,CACH,CAAC,CACH,CAAC,UAAAjB,QAAA,CAAAC,IAAA,IAAAD,QAAA,CAAAkB,EAAA,CAAAlB,QAAA,aAEDmB,OAAO,CAACC,KAAK,CAAApB,QAAA,CAAAkB,EAAM,CAAC,CAAC,OAAAlB,QAAA,CAAAO,MAAA,UACd,CAAEC,OAAO,CAAE,EAAG,CAAC,2BAAAR,QAAA,CAAAqB,IAAA,MAAA3B,OAAA,iBAEzB,kBAnBK,CAAAL,WAAWA,CAAAiC,EAAA,SAAAhC,KAAA,CAAAiC,KAAA,MAAAC,SAAA,OAmBhB,CAED,GAAM,CAAAC,cAAc,CAAG,QAAjB,CAAAA,cAAcA,CAAIC,UAAU,CAAK,CACrCtC,SAAS,CAACsC,UAAU,CAAC,CACrB3C,cAAc,CAAC2C,UAAU,CAAC,CAC5B,CAAC,CAED,mBACE9C,IAAA,CAACJ,aAAa,EACZmD,WAAW,CAAC,iBAAiB,CAC7BC,eAAe,CAAE,GAAI,CACrBhB,KAAK,CAAEzB,MAAO,CACd0C,QAAQ,CAAEJ,cAAe,CACzBpC,WAAW,CAAEA,WAAY,CAC1B,CAAC,CAEN,CAAC,CAED,cAAe,CAAAR,MAAM"},"metadata":{},"sourceType":"module","externalDependencies":[]}